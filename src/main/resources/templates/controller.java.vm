package ${package.Controller};


import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.zky10.wlyj.config.base.PageHelper
import com.zky10.wlyj.config.base.ErrorCode;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
import ${package.Entity}.${entity};
import java.util.Map;
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
    #set($str=${table.serviceName})
    #set($serviceName=$str.substring(0,1).toLowerCase() + $str.substring(1,$str.length()))
    #set($str=${entity})
    #set($entityName=$str.substring(0,1).toLowerCase() + $str.substring(1,$str.length()))

    @Autowired
    private ${table.serviceName} ${serviceName};

    /**
    *  分页查询列表 ${entityName}
    */
    @ResponseBody
    @RequestMapping(value = "/listPage", method = RequestMethod.POST)
    public Map<String,Object> list${entity}ByPage(@RequestBody PageHelper<${entity}> pageHelper) {
        return this.fillSuccResult(${serviceName}.list${entity}ByPage(pageHelper),ErrorCode.E200.getCode(), ErrorCode.E200.getMessage());
    }


    /**
     *  查询列表 ${entityName}
     */
    @ResponseBody
    @RequestMapping(value = "/list", method = RequestMethod.POST)
    public Map<String,Object> list${entity}(@RequestBody ${entity} ${entityName}) {
        return this.fillSuccResult(${serviceName}.list${entity}(${entityName}),ErrorCode.E200.getCode(), ErrorCode.E200.getMessage());
    }

    /**
     *  根据ID获取 ${entityName} 详情
     */
    @ResponseBody
    @RequestMapping(value = "/detail", method = RequestMethod.POST)
    public Map<String,Object> detail(@RequestBody ${entity} ${entityName}) {
        return this.fillSuccResult(${serviceName}.getById(${entityName}.getId()),ErrorCode.E200.getCode(), ErrorCode.E200.getMessage());
    }

    /**
     *  根据ID获取 ${entityName} 详情
     */
    @ResponseBody
    @RequestMapping(value = "/detail", method = RequestMethod.POST)
    public Map<String,Object> detail(@RequestBody Integer id) {
        return this.fillSuccResult(${serviceName}.getById(id),ErrorCode.E200.getCode(), ErrorCode.E200.getMessage());
    }

    /**
    * ${entityName} 保存
    */
    @ResponseBody
    @RequestMapping(value = "/save", method = RequestMethod.POST)
    public Map<String,Object> save${entity}(@RequestBody ${entity} ${entityName}) {
        try {
            return this.fillSuccResult(${serviceName}.save${entity}(${entityName}),ErrorCode.E200.getCode(), ErrorCode.E200.getMessage());
        } catch (Exception e) {
            return this.fillFailResult(ErrorCode.E500.getCode(), ErrorCode.E500.getMessage());
        }
    }


    /**
     * ${entityName} 更新
     */
    @ResponseBody
    @RequestMapping(value = "/update", method = RequestMethod.POST)
    public Map<String,Object> update${entity}(@RequestBody ${entity} ${entityName}) {
        try {
            ${serviceName}.update${entity}(${entityName});
            return this.fillSuccResult(null,ErrorCode.E200.getCode(), ErrorCode.E200.getMessage());
        } catch (Exception e) {
            return this.fillFailResult(ErrorCode.E500.getCode(), ErrorCode.E500.getMessage());
        }
    }


    /**
     * ${entityName} 删除
     */
    @ResponseBody
    @RequestMapping(value = "/delete", method = RequestMethod.POST)
    public Map<String,Object> delete${entity}(Integer id) {
        if (${serviceName}.removeById(id)) {
            return this.fillSuccResult(null, ErrorCode.E200.getCode(), ErrorCode.E200.getMessage());
        }
        return this.fillFailResult(ErrorCode.E500.getCode(), ErrorCode.E500.getMessage());
    }

}

#end